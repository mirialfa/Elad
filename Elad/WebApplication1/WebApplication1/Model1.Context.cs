//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EladEntities : DbContext
    {
        public EladEntities()
            : base("name=EladEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<City> City { get; set; }
        public virtual DbSet<Street> Street { get; set; }
    
        public virtual int CreateCity(string nameCity)
        {
            var nameCityParameter = nameCity != null ?
                new ObjectParameter("NameCity", nameCity) :
                new ObjectParameter("NameCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateCity", nameCityParameter);
        }
    
        public virtual int CreateStreet(string nameStreet, string nameCity)
        {
            var nameStreetParameter = nameStreet != null ?
                new ObjectParameter("NameStreet", nameStreet) :
                new ObjectParameter("NameStreet", typeof(string));
    
            var nameCityParameter = nameCity != null ?
                new ObjectParameter("NameCity", nameCity) :
                new ObjectParameter("NameCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateStreet", nameStreetParameter, nameCityParameter);
        }
    
        public virtual int DeleteCity(string cityName)
        {
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCity", cityNameParameter);
        }
    
        public virtual ObjectResult<GetStreetsByCityId_Result> GetStreetsByCityId(Nullable<int> cityId)
        {
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStreetsByCityId_Result>("GetStreetsByCityId", cityIdParameter);
        }
    }
}
